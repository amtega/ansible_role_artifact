---
- name: Download maven artifacts
  vars:
    artifact_maven_dest: >-
      {{ artifact_item.dest
         + (artifact_item.dest_file | default("") | length > 0)
           | ternary("/" + artifact_item.dest_file | default(""), "") }}
  tags:
    - role::artifact
    - role::artifact::maven
  block:
    - name: Check maven artifact download
      ansible.builtin.stat:
        path: "{{ artifact_maven_check_path }}"
      register: artifact_maven_check_result
      no_log: "{{ artifact_item.no_log | default(true) }}"
      loop: "{{ _artifact_type_state_present }}"
      loop_control:
        loop_var: artifact_item
        label: "{{ artifact_item.id }}"
      vars:
        artifact_maven_check_path: >-
          {{ (artifact_item_unarchive_creates)
             | ternary(artifact_item_unarchive_creates_dest,
                       artifact_maven_dest) }}

    - name: Perform maven artifacts download
      vars:
        artifact_previous_version: >-
          {{ (ansible_local["artifact_" + artifact_item.id]
              | default({}))["version"]
              | default(artifact_undefined_place_holder) }}
        artifact_maven_check_results: >-
          {{ artifact_maven_check_result.results }}
        artifact_download_exists: >-
          {{ artifact_maven_check_results[artifact_item_index].stat.exists }}
      block:
        - name: Remove previous maven artifact download
          ansible.builtin.include_tasks: absent.yml
          when:
            - artifact_download_exists
            - artifact_item.download | default(true) | bool
            - artifact_item.force | default(false) | bool
          loop: "{{ _artifact_type_state_present }}"
          loop_control:
            loop_var: artifact_item
            index_var: artifact_item_index
            label: "{{ artifact_item.id }}"
          vars:
            artifact_state_absent_transient:
              - "{{ artifact_item }}"

        - name: Download artifacts from maven repository
          community.general.maven_artifact:
            artifact_id: "{{ artifact_item.artifact_id | default(omit) }}"
            attributes: "{{ artifact_item.attributes | default(omit) }}"
            classifier: "{{ artifact_item.classifier | default(omit) }}"
            dest: "{{ artifact_maven_dest }}"
            extension: "{{ artifact_item.extension | default(omit) }}"
            group: "{{ artifact_item.group | default(omit) }}"
            group_id: "{{ artifact_item.group_id | default(omit) }}"
            keep_name: "{{ artifact_item.keep_name | default(omit) }}"
            mode: "{{ artifact_item.mode | default(omit) }}"
            owner: "{{ artifact_item.owner | default(omit) }}"
            password: "{{ artifact_item.password | default(omit) }}"
            repository_url: >-
              {{ artifact_item.host }}{{ artifact_item.path | default('/') }}
            selevel: "{{ artifact_item.selevel | default(omit) }}"
            serole: "{{ artifact_item.serole | default(omit) }}"
            setype: "{{ artifact_item.setype | default(omit) }}"
            seuser: "{{ artifact_item.seuser | default(omit) }}"
            state: present
            timeout: "{{ artifact_item.timeout | default(omit) }}"
            unsafe_writes: "{{ artifact_item.unsafe_writes | default(omit) }}"
            username: "{{ artifact_item.username | default(omit) }}"
            validate_certs: "{{ artifact_item.validate_certs | default(omit) }}"
            verify_checksum: >-
              {{ artifact_item.verify_checksum | default(omit) }}
            version: "{{ artifact_item.version | default(omit) }}"
          register: artifact_maven_result
          retries: "{{ artifact_item.retries | default(artifact_retries) }}"
          delay: "{{ artifact_item.delay | default(artifact_delay) }}"
          until: artifact_maven_result is succeeded
          when: >-
            not artifact_download_exists
            or (artifact_item.download | default(true) | bool
                and (artifact_item.force | default(false) | bool
                    or artifact_previous_version is none
                    or (artifact_item.version is defined
                        and artifact_item.version | string
                        != artifact_previous_version)))
          no_log: "{{ artifact_item.no_log | default(true) }}"
          loop: "{{ _artifact_type_state_present }}"
          loop_control:
            loop_var: artifact_item
            index_var: artifact_item_index
            label: "{{ artifact_item.id }}"
          ignore_errors: true
          environment: "{{ proxy_client_environment }}"

        - name: Check maven artifacts
          ansible.builtin.assert:
            that: >-
              artifact_maven_result.results[artifact_item_index]
              is success
            quiet: true
            fail_msg: >-
              {{ artifact_maven_result.results[artifact_item_index].msg
                 | default("") }}
            success_msg: Artifact downloaded successful
          loop: >-
            {{ _artifact_type_state_present
               | map("artifact_hide_sensitive_info")
               | list }}
          loop_control:
            loop_var: artifact_item
            index_var: artifact_item_index
            label: "{{ artifact_item.id }}"
